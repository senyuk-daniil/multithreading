package main

import (
	"fmt"
	"sync"
)

func main() {
	var wa sync.WaitGroup
	ch := make(chan int, 5)
	for i := 1; i <= 5; i++ {
		wa.Add(1)
		go func(i int) {
			defer wa.Done()
			ch <- i
			fmt.Println("ch <- ", i)
		}(i)
	}
	go func() {
		wa.Wait()
		close(ch)
	}()
	sum := 0
	for n := range ch {
		sum += n
	}
	fmt.Println("sum:", sum)
	wa.Wait()
}

/*Можно ли решить задачу без waitGroup? Какие есть варианты?
*)Можно использовать контекст и ждать его завершения

Можно ли сделать так чтобы номера выводились в определённом порядке? Почему? Может всё-таки можно?
*)Да, через каналы, как в примере 2

Как влияет GOMAXPROCS на выполнение программы?
*) GOMAXPROCS то максимальное кол-во ОС-процессов выполняющихся одновременно, на каждом ОС-прцессе выделяется место под определённое кол-во горутин => чем больше процессов, тем быстрее выполнение многопоточных программ
*/
